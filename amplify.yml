version: 1.0
frontend:
  phases:
    preBuild:
      commands:
        - yum -y -q install python-devel
        - yum -y -q install python-pip
        - echo Installing Hugo ...
        - wget -q https://github.com/gohugoio/hugo/releases/download/v0.55.6/hugo_extended_0.55.6_Linux-64bit.tar.gz
        - tar -xf hugo_extended_0.55.6_Linux-64bit.tar.gz hugo
        - mv hugo /usr/bin/hugo
        - rm -rf hugo_extended_0.55.6_Linux-64bit.tar.gz
        - echo Successfully installed Hugo
    build:
      commands:
        - pip -q install https://github.com/linkchecker/linkchecker/archive/master.zip
        # Linkchecker has a bug where it can't pass an auth file
        # https://github.com/linkchecker/linkchecker/issues/343
        # Older versions have an issue parsing robots.txt on https pages
        # There is currently no version that fixes both.
        # This is the main linkchecker file from https://github.com/linkchecker/linkchecker/blob/a83754a6c8aa7178009fc2d358ab9c17278e4178/linkchecker
        # But patched to allow for a password to be passed via CLI
        - cp utils/linkchecker /usr/bin/linkchecker
        # Run linkchecker with 16 threads and ignore the PDF chapter (until all PDF links are moved to shortcodes)
        - time linkchecker -t 16 -a -u cumulus -p $PASSWORD https://stage.docs.cumulusnetworks.com --ignore-url=pdf
        # Embed the git commit ID into the PDF for future troubleshooting
        - sed -i "s/COMMIT_INFO/$AWS_COMMIT_ID/g" themes/netDocs/layouts/_default/baseof.html
        #- if [ "${AWS_BRANCH}" = "master" ]; then aws s3 sync static $STATIC_BUCKET --delete ; fi
        - echo Building docs ...
        # Don't minify in non-prod branches to simplify troubleshooting
        - if [ "${AWS_BRANCH}" != "master" ]; then hugo --baseURL $BASEURL ; fi
        - if [ "${AWS_BRANCH}" = "master" ]; then hugo --minify --baseURL $BASEURL ; fi
        - echo Successfully built docs
        # If everything else worked, and we're on master, then cut a new release.
        - echo "Creating new Github release"
        - if [ "${AWS_BRANCH}" = "master" ]; then python utils/build_release.py $GITHUB_TOKEN  ; fi
    # postBuild:
    #   commands:
    #     # Install docraptor and requests libraries
    #     - pip3 install --upgrade docraptor requests
    #     # Tell docraptor to build both PDFs and wait for a response
    #     # build_pdfs.py <DOCRAPTOR_API_KEY> <BASE_URL> <HTTP_AUTH_NAME> <HTTP_AUTH_PASS> 
    #     - python3 build_pdfs.py $DOCRAPTOR_KEY $BASEURL $USERNAME $PASSWORD
  artifacts:
    files:
      - '**/*'
    baseDirectory: public
  cache:
    paths: []
